setwd("~/Dropbox/fishou/Marinlabwork/papers_writing/Migration routes (1)/NN/R1/Figures/Figure 4/Fig4b_4d")
library(plyr)
library(ggplot2)
library (plotrix) #use for std.error
C1 <-read.csv("2016-03-28-trackcomplie.csv", header = TRUE, sep = ",")
C1$geno <- factor(C1$geno, levels = c("nkx", "dlx"))
C2<-ddply(C1, .(cell_no, region, geno), summarize, maxTime = max(T.min))
C3 <- merge(C2, C1)
C4 <- subset (C3, T.min == 0 | T.min == maxTime)
C5 <- subset (C3, T.min == maxTime)
C6a <-subset(C5, region == "soma")
C6b <-subset(C5, region == "N-tip")
tsub<- C6b[, c(1, 5, 6)]
colnames(tsub) <- c("cell_no", "Xtip", "Ytip")
C7 <- merge(C6a, tsub)
C8 <- ddply(C7, .(cell_no, geno), summarise, d_ston_X = sqrt((X.micron - Xtip)^2 + (Y.micron-Ytip)^2))
C9 <- ddply(C8, .(geno), summarise, md = mean (d_ston_X), sem = std.error(d_ston_X))
distMU <- wilcox.test(d_ston_X ~ geno, data=C8)
disttest<- t.test(d_ston_X ~ geno, data=C8)
distMU
disttest
gp1 <- ggplot(C8, aes(y= d_ston_X, x = geno)) +
geom_boxplot(outlier.shape = NA, colour = "black") +
geom_jitter(aes(colour = geno))+
ylab("Distance soma to time final")+
scale_fill_manual(values=c("gray","orange"))+
scale_colour_manual(values=c("gray","orange"))+
theme_classic()
gp2<- ggplot(C8, aes(y= d_ston_X, x = geno)) +
stat_summary_bin(aes(y = d_ston_X), fun.y = "mean", geom = "bar", color = "black", fill = "white")+
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "black")+
#geom_jitter(aes(colour = geno))+
geom_dotplot(binaxis="y",stackdir="center",dotsize=0.5)+
scale_fill_manual(values=c("dark gray","orange"))+
scale_colour_manual(values=c("dark gray","orange"))+
theme_classic () +
labs (x = 'region', y = "Distance soma to time final")
gp1
gp2
library(plyr)
library(ggplot2)
library (plotrix) #use for std.error
C1 <-read.csv("2016-03-28-trackcomplie.csv", header = TRUE, sep = ",")
t0 <- subset(C1, T.min ==0)
tsub<- t0[, c(1:3, 5, 6)]
ct0<-colnames(tsub)
ct0[2:3] <- c("sx", "sy")
colnames(tsub) <- ct0
C2 <-merge(C1, tsub)
Dist_C2 <-ddply(C2, .(cell_no, region, T.min, geno), summarize, xc = X.micron - sx, yc = Y.micron -sy)
Dist_C3 <-ddply(Dist_C2, .(cell_no, region, T.min, geno), summarize,
d2= sqrt((xc)^2 + (yc)^2))
library(ggplot2)
s1<- subset(Dist_C3, T.min>1000 & T.min<3000)
gp1 <- ggplot(Dist_C3,aes(x= T.min , y=d2, colour = cell_no)) +
facet_grid(region ~ geno) +
geom_point() + geom_smooth(data = s1, method = "lm", se = FALSE)+
ylab("Relative distance from t=0 (um)") +
xlab("Time (mins)") +
theme_bw() +
theme(axis.text = element_text(size = 12),
axis.title=element_text(size=16,face="bold"),
panel.grid.major = element_line(colour = "grey40"),
panel.grid.minor = element_blank(),
strip.text = element_text(face = "bold", size = 10, colour = "black")
) +
guides(colour = guide_legend(show = FALSE))
gp1
s1<- subset(Dist_C3, T.min>1000 & T.min<3000)
test1<- ddply(s1, .(region, cell_no, geno), summarize,
I_d2=(lm(d2~T.min))$coefficients [1],
I_time=abs((lm(d2~T.min))$coefficients [2]))
test3<- ddply(test1, .(region, geno), summarize, mIt = mean(I_time), sem = std.error(I_time))
test1$Genotype <- factor(test1$Genotype, levels = c("nkx", "dlx"))
test1sub = subset(test1, region == "N-tip")
test1sub2 = subset(test1, region == "soma")
Ntip_pv <- wilcox.test(I_time ~ geno, data=test1sub)
soma_pv <- wilcox.test(I_time ~ geno, data=test1sub2)
p.adjust(0.01166, method = "bonferroni", n=2)
p.adjust(0.6334, method = "bonferroni", n=2)
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
test1$geno <- factor(test1$geno, levels = c("nkx", "dlx"))
test3<- ddply(test1, .(region, geno), summarize, mIt = mean(I_time), sem = std.error(I_time))
test1$Genotype <- factor(test1$Genotype, levels = c("nkx", "dlx"))
gp2 <- ggplot(test1, aes(y= I_time, x = geno, colour = geno))+
facet_grid(region ~. , scales="free_y") +
geom_boxplot(outlier.shape = NA) + geom_jitter()+
scale_fill_manual(values=c("#555555","#FF6600"))+
scale_colour_manual(values=c("#555555","#FF6600"))+
ylab("Average velocity (um per min)")+
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title=element_text(size=18,face="bold"),
legend.key = element_rect(fill = "white"),
legend.background = element_rect(fill = "white"),
legend.text = element_text(size = 14),
#panel.grid.major = element_line(colour = "grey40"),
#panel.grid.minor = element_blank(),
strip.text = element_text(face = "bold", size = 14, colour = "black")
)
gp2
gp3
gp3 <- ggplot(test3, aes(x = factor(geno), y = mIt)) +
facet_grid(region ~. , scales="free_y") +
geom_bar(stat = "identity", colour = "black", fill =c("#555555","#FF6600")) +
geom_errorbar(aes(ymin=mIt-sem, ymax=mIt+sem),
width=.2,colour="black",  # Width of the error bars
position=position_dodge(0.8)) +
theme_classic (base_size = 14) +
ylab("Speed") +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title=element_text(size=18,face="bold"),
legend.key = element_rect(fill = "white"),
legend.background = element_rect(fill = "white"),
legend.text = element_text(size = 14),
panel.grid.major = element_line(colour = "grey40"),
panel.grid.minor = element_blank(),
strip.text = element_text(face = "bold", size = 14, colour = "black")
)
gp3
gplot3 <- ggplot(test3, aes(y= mean_slope, x = geno)) +
facet_grid(region ~. , scales="free_y") +
geom_boxplot() + geom_jitter() +
ylab("Average velocity (um per min)")+
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title=element_text(size=18,face="bold"),
legend.key = element_rect(fill = "white"),
legend.background = element_rect(fill = "white"),
legend.text = element_text(size = 14),
panel.grid.major = element_line(colour = "grey40"),
panel.grid.minor = element_blank(),
strip.text = element_text(face = "bold", size = 14, colour = "black")
)
gp2 <- ggplot(test1, aes(y= I_time, x = geno, colour = geno))+
facet_grid(region ~. , scales="free_y") +
geom_boxplot(outlier.shape = NA) + geom_jitter()+
scale_fill_manual(values=c("#555555","#FF6600"))+
scale_colour_manual(values=c("#555555","#FF6600"))+
ylab("Average velocity (um per min)")+
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title=element_text(size=18,face="bold"),
legend.key = element_rect(fill = "white"),
legend.background = element_rect(fill = "white"),
legend.text = element_text(size = 14),
#panel.grid.major = element_line(colour = "grey40"),
#panel.grid.minor = element_blank(),
strip.text = element_text(face = "bold", size = 14, colour = "black")
)
gp2
library(plyr)
library(ggplot2)
library (plotrix) #use for std.error
C1 <-read.csv("2016-03-28-trackcomplie.csv", header = TRUE, sep = ",")
C1$geno <- factor(C1$geno, levels = c("nkx", "dlx"))
C2<-ddply(C1, .(cell_no, region, geno), summarize, maxTime = max(T.min))
C3 <- merge(C2, C1)
C4 <- subset (C3, T.min == 0 | T.min == maxTime)
C5 <- subset (C3, T.min == maxTime)
C6a <-subset(C5, region == "soma")
C6b <-subset(C5, region == "N-tip")
tsub<- C6b[, c(1, 5, 6)]
colnames(tsub) <- c("cell_no", "Xtip", "Ytip")
C7 <- merge(C6a, tsub)
C8 <- ddply(C7, .(cell_no, geno), summarise, d_ston_X = sqrt((X.micron - Xtip)^2 + (Y.micron-Ytip)^2))
C9 <- ddply(C8, .(geno), summarise, md = mean (d_ston_X), sem = std.error(d_ston_X))
disttest<- t.test(d_ston_X ~ geno, data=C8)
q1 <- ddply(C8, .(geno), summarise, q25 = quantile (d_ston_X, 0.25), q50 = quantile (d_ston_X, 0.5),
q75 = quantile (d_ston_X, 0.75))
q1
